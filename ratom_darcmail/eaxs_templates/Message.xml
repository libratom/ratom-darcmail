<!--# 
This template represents the EAXS <Message> element.
It is related to the lib.message_object.MessageObject module.

Note: the custom "skipnull" filter is used so that elements with null values will not appear in the
rendered EAXS file.
#-->

        <Message>
        
            <!--# Get the initial child elements. #-->
            <RelPath>{{ message.rel_path }}</RelPath>
            <LocalId>{{ message.local_id }}</LocalId>
            <MessageId>{{ message.get("message-id") | cdata }}</MessageId>
            <MimeVersion>{{ message.get("mime-version") }}</MimeVersion>

            <!--# Get elements per the EAXS "message-headers" group. #-->
            <!--# 
            TODO: CHECK ALL .get() string request values!
            TODO: Need to be repeatable: TO, CC, BCC, IN REPLY TO, REFERENCES, COMMENTS, KEYWORDS.
            TODO: Is Sender always returned? If it's xs:string does it matter since blanks are OK?
            #-->
            <OrigDate>{{ message.get("orig-date") | skipnull }}</OrigDate>
            <From>{{ message.get("from") | cdata }}</From>
            <Sender>{{ message.get("sender") | cdata }}</Sender>
            <To>{{ message.get("to") | cdata }}</To>
            <Cc>{{ message.get("cc") | skipnull | cdata }}</Cc>
            <Bcc>{{ message.get("bcc") | skipnull | cdata }}</Bcc>
            <InReplyTo>{{ message.get("in-reply-to") | skipnull | cdata }}</InReplyTo>
            <References>{{ message.get("references") | skipnull | cdata }}</References>
            <Subject>{{ message.get("subject") | cdata }}</Subject>
            <Comments>{{ message.get("comments") | skipnull | cdata }}</Comments>
            <Keywords>{{ message.get("keywords") | skipnull | cdata }}</Keywords> 

            <!--# Get elements per the EAXS "header-type". #-->
            <!--#
            TODO: What's the source for the optinal <Comments> element? I can't find anything
            in RFC 4021 (at least I think that's the correct spec to look at).
            #-->
            {% for name, value in message._headers %}
            <Header>
                <Name>{{ name | cdata }}</Name>
                <Value>{{ value | cdata }}</Value>
                <Comments></Comments>
            </Header>
            {% endfor %}

            <!--# Get the element showing the message status (read, answered, etc.).
            Note: this logic is based on https://wingware.com/psupport/python-manual/2.5/lib/mailbox-mboxmessage.html
            #-->
            <!--#
            TODO: Is there support for "Draft" or "Recent" in other DarcMail packages ??? 
            TODO: Maybe put this in a Python script. Anything that requires looping, look-ups, etc. should go into external logic, yes?
            #-->
            {% set status = message.get("status", failobj="") + message.get("x-status", failobj="") %}
            {% set status_dict = {"R": "Seen", "A": "Answered", "F": "Flagged", "D": "Deleted"} %}
            {% for status_item in status | trim %}
            <StatusFlag>{{ status_dict.get(status_item) | skipnull }}</StatusFlag>
            {% endfor %}

            <!--# ??? if multibody then include Multibody.xml ... otherwise include Body.xml ... or something like that? ... #-->
            <!--# {% include "Body.xml" %} #-->

            <!--# Get the element showing parse errors. #-->
            {% for type, location in message.parse_errors %}
            <Incomplete>
                <ErrorType>Python: {{ type }}</ErrorType>
                <ErrorLocation>{{ location }}</ErrorLocation>
            </Incomplete>
            {% endfor %}

            <!--# Get the end-of-line element. #-->
            <Eol>{{ message.get_eol() }}</Eol>

        </Message>
        <!--# The "raw" block below forces a line break. #-->
        {% raw %}{% endraw %}
        
